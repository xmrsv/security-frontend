---
import Layout from "../../layouts/Layout.astro";
---

<style lang="scss">
	.error {
		margin: 2rem;
		padding: 1rem;
	}

	form {
		max-width: 30ch;
		margin: 2rem;
		padding: 1rem;
		display: flex;
		flex-direction: column;

		label {
			margin-block-end: 0.5rem;
		}

		input {
			margin-block-end: 1rem;
			padding: 0.5rem;
			border-radius: 0.5rem;
			border: 0.1rem solid hsl(0, 0%, 50%);
		}

		button {
			border-radius: 0.5rem;
			border: none;
			background-color: hsl(0, 0%, 0%);
			color: hsl(0, 0%, 100%);
			padding: 0.5rem;
			font: inherit;
			font-weight: 600;
		}
	}
</style>

<Layout title="Login" description="login">
	<div class="error">
		<p>Response: <span id="responseText">none</span></p>
	</div>

	<form id="form">
		<label for="username">Usuario</label>
		<input type="text" name="username" id="usernameInput" required />
		<label for="password">Contraseña</label>
		<input type="password" name="password" id="passwordInput" required />
		<button id="loginButton">Iniciar sesión</button>
	</form>

	<script>
		import { authFromUser, type User } from "../../scripts/InteractionAPI";

        const webHost = window.location.host

		const usernameInput: HTMLInputElement = document.getElementById(
			"usernameInput"
		) as HTMLInputElement;
		const passwordInput: HTMLInputElement = document.getElementById(
			"passwordInput"
		) as HTMLInputElement;
		const loginButton: HTMLButtonElement = document.getElementById(
			"loginButton"
		) as HTMLButtonElement;
		const responseText = document.getElementById("responseText");

		let user: User = {
			username: "",
			password: "",
		};

		loginButton.addEventListener("click", async (event: Event) => {
			event.preventDefault();
			user.username = usernameInput.value;
			user.password = passwordInput.value;

			const response = await authFromUser(user);
			const data = await response.json();

			if (response.status === 401) {
				responseText.innerHTML = data.error;
			} else if (response.status === 200) {
				responseText.innerHTML = "logged in";
                Response.redirect(webHost + "/protected")
            }
		});

	</script>
</Layout>
