---
import Layout from "../layouts/Layout.astro";
---

<style>
	input {
		padding: 0.6rem;
		border-radius: 0.5rem;
		border: 0.05rem solid gray;
	}

	form {
		background-color: hsl(0, 0%, 95%);
		padding: 2rem;
		max-width: 30ch;
		display: flex;
		flex-direction: column;
		border-radius: 0.5rem;
		margin-block-end: 1rem;
	}

	label,
	input,
	button {
		font: inherit;
	}

	form label {
		margin-block-end: 0.75rem;
	}

	form input {
		margin-block-end: 1.5rem;
	}

	form button {
		outline: none;
		border: none;
		padding: 0.8rem;
		border-radius: 0.5rem;
		transition:
			transform 100ms ease,
			border-bottom 100ms ease;
		background-color: hsl(219, 86%, 53%);
		font-weight: 500;
		color: hsl(0, 0%, 100%);
	}
</style>

<Layout
	title="Iniciar sesión"
	description="Inicia sesión con tu usuario y contraseña"
>
	<form id="form">
		<label for="username">Usuario</label>
		<input type="text" name="username" id="username" />
		<label for="password">Contraseña</label>
		<input type="password" name="password" id="password" />
		<button id="button">Iniciar sesión</button>
	</form>

	<pre id="responseText"></pre>

	<div>
		<h2>Obtener alumnos</h2>
		<button id="getUserButton">Obtener alumnos</button>

		<ul id="userList"></ul>
	</div>
</Layout>

<script>
	import {
		authFromUser,
		getAlumnos,
		type User,
		type Alumno,
	} from "../scripts/InteractionAPI.ts";

	const usernameInput: HTMLInputElement = document.getElementById(
		"username"
	) as HTMLInputElement;
	const passwordInput: HTMLInputElement = document.getElementById(
		"password"
	) as HTMLInputElement;
	const sendButton: HTMLButtonElement = document.getElementById(
		"button"
	) as HTMLButtonElement;
	const responseText: HTMLPreElement = document.getElementById(
		"responseText"
	) as HTMLPreElement;
	const getUserButton: HTMLButtonElement = document.getElementById(
		"getUserButton"
	) as HTMLButtonElement;
	const userList: HTMLUListElement = document.getElementById(
		"userList"
	) as HTMLUListElement;

	sendButton.addEventListener("click", async (event: Event): Promise<void> => {
		event.preventDefault();
		const user: User = {
			username: usernameInput.value,
			password: passwordInput.value,
		};
		const token: string = await authFromUser(user);
		responseText.innerHTML = token;
		localStorage.setItem("token", token);
	});

	getUserButton.addEventListener("click", async (): Promise<void> => {
		userList.innerHTML = "";
		try {
			const alumnos = await getAlumnos(localStorage.getItem("token"));
			alumnos.forEach((alumno: Alumno) => {
				const listItem = document.createElement("li");
				listItem.textContent = alumno.nombres;
				userList.appendChild(listItem);
			});
		} catch (error) {
			console.error("Error al obtener usuarios:", error);
			// Mostrar el mensaje de error personalizado al usuario
			alert("Error: " + error);
		}
	});
</script>
